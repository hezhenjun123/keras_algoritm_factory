RUN_ENV: local #{aws, local}
BATCH_SIZE: 4
LEARNING_RATE: 0.0001
EPOCHS: 1000
TRAIN_STEPS_PER_EPOCH: -1
VALID_STEPS_PER_EPOCH: -1
NUM_CLASSES: 2

LOCAL_PARA:
  DIR_OUT: ./out
  DATA_DIR: s3://landing-client-zoomlion/chaff_segmentation/chaff_hopper/

AWS_PARA:
  DIR_OUT: /workspace/output/
  DATA_DIR: s3://landing-client-zoomlion/chaff_segmentation/chaff_hopper/

DATA_GENERATOR:
  OUTPUT_SHAPE: [128, 128]
  OUTPUT_IMAGE_CHANNELS: 3
  OUTPUT_IMAGE_TYPE: float32
  DROP_REMAINDER: false
  CACHE_DIR: cache
  NUM_PARALLEL_CALLS: 4
  REPEAT: true

TRANSFORM:
  RESIZE: [128, 128]

TRAINING_DATA_INFO:
  TRAIN_CSV_FILE: s3://landing-client-zoomlion/chaff_segmentation/chaff_hopper/train.csv
  VALID_CSV_FILE: s3://landing-client-zoomlion/chaff_segmentation/chaff_hopper/train.csv
  SPLIT: split
  SPLIT_TRAIN_VAL: train
  SPLIT_VALID_VAL: valid

  SEPARATOR: ','
  IMAGE_PATH: image_path
  SEGMENTATION_PATH: seg_label_path
  LABEL_NAME: label_name
  IMAGE_LEVEL_LABEL: image_level_label


MODEL:
  LAYER_SIZE: 64
  LAYER_COUNT: 3
  BACKBONE: mobilenet-v2
  IS_BACKBONE_TRAINABLE: false
  MODEL_DIRECTORY: out
  CHECKPOINT_DIRECTORY: checkpoint
  LOG_DIRECTORY: log


EXPERIMENT:
  EXPERIMENT_NAME: ExperimentSegmentationTF2Unet
  MODEL_NAME: ModelTF2UnetSegmentation
  TRAIN_TRANSFORM: TransformSegmentation
  TRAIN_GENERATOR: GeneratorSegmentationTF2Unet
  VALID_TRANSFORM: # If empty, use TRAIN_TRANSFORM
  VALID_GENERATOR: # If empty, use TRAIN_GENERATOR