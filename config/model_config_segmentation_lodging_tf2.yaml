RUN_ENV: local #{aws, local}
RUN_MODE: inference #{train, inference}
BATCH_SIZE: 4
LEARNING_RATE: 0.0001
EPOCHS: 300
TRAIN_STEPS_PER_EPOCH: -1
VALID_STEPS_PER_EPOCH: -1
NUM_CLASSES: 2
DIR_OUT: /workspace/output/  #directory on the ec2 host, to save output files from code
DATA_DIR: s3://zoomlion-prod-data/harvester/wheat-lodging/segmentation/data-v0.2/


DATA_GENERATOR:
  OUTPUT_SHAPE: [512, 512]
  OUTPUT_IMAGE_CHANNELS: 3
  OUTPUT_IMAGE_TYPE: float32
  DROP_REMAINDER: false
  CACHE_DIR: cache
  NUM_PARALLEL_CALLS: 4
  REPEAT: true

TRANSFORM:
  RESIZE: [512, 512]

TRAINING_DATA_INFO:
  TRAIN_CSV_FILE: s3://zoomlion-prod-data/harvester/wheat-lodging/segmentation/data-v0.2/train.csv
  VALID_CSV_FILE: s3://zoomlion-prod-data/harvester/wheat-lodging/segmentation/data-v0.2/train.csv
  SPLIT: split
  SPLIT_TRAIN_VAL: train
  SPLIT_VALID_VAL: valid
  SEPARATOR: ','
  IMAGE_PATH: image_path
  SEGMENTATION_PATH: seg_label_path
  LABEL_NAME: label_name
  IMAGE_LEVEL_LABEL: image_level_label


MODEL:
  LAYER_SIZE: 64
  LAYER_COUNT: 3
  BACKBONE: mobilenet-v2
  IS_BACKBONE_TRAINABLE: true
  MODEL_DIRECTORY: out
  CHECKPOINT_DIRECTORY: checkpoint
  LOG_DIRECTORY: log


EXPERIMENT:
  EXPERIMENT_NAME: ExperimentSegmentationTF2Unet
  MODEL_NAME: ModelTF2UnetSegmentation
  TRAIN_TRANSFORM: TransformSegmentation
  TRAIN_GENERATOR: GeneratorSegmentationTF2Unet
  VALID_TRANSFORM: # If empty, use TRAIN_TRANSFORM
  VALID_GENERATOR: # If empty, use TRAIN_GENERATOR


INFERENCE:
  INFERENCE_NAME: InferenceLodgingTF2
  INFERENCE_CSV_FILE: inference-data/data-v0.2/train.csv
  INFERENCE_DATA_DIR: inference-data/data-v0.2/
  LOAD_MODEL_PATH: wheat_lodging_segmentation_run/run_004/checkpoints/epoch_0138/cp.hdf5
  SPLIT: split #Column name in the csv file
  SPLIT_VAL: valid #Column content in the csv file
  SEPARATOR: ','
  IMAGE_PATH: image_path
  SEGMENTATION_PATH: seg_label_path
  LABEL_NAME: label_name
  IMAGE_LEVEL_LABEL: image_level_label
  NUM_PROCESS_IMAGE: 1
  PRED_IMAGE_DIR: pred_image


LOCAL_OVERRIDE:
  DIR_OUT: ./out
  DATA_DIR: